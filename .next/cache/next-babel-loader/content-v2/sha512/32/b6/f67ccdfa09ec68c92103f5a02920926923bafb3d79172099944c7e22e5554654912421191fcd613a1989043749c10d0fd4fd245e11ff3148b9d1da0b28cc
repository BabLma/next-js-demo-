{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nabintamang/Udemy-Cources/React-Cource-2021/Next-Js-Course/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\n// .com/ HOme Page\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport head from \"next/head\";\n\nconst Meetup = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}; // export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from api\n//   return {\n//     props: {\n//       meetups: meetUpData,\n//     },\n//   };\n// };\n\n\nexport const getStaticProps = async () => {\n  // fetch some data\n  const client = await MongoClient.connect(\"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n  const allMeetup = await meetupsCollection.find().toArray(); //close the databse connection onece done\n\n  client.close();\n  return {\n    props: {\n      meetups: allMeetup.map(meetups => ({\n        image: meetups.image,\n        title: meetups.title,\n        address: meetups.address,\n        id: meetups._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default Meetup;","map":{"version":3,"sources":["/Users/nabintamang/Udemy-Cources/React-Cource-2021/Next-Js-Course/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","MongoClient","Fragment","head","Meetup","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","allMeetup","find","toArray","close","map","image","title","address","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAA1B;AAEA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAxB,CATwC,CAWxC;;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEO,SAAS,CAACI,GAAV,CAAeX,OAAD,KAAc;AACnCY,QAAAA,KAAK,EAAEZ,OAAO,CAACY,KADoB;AAEnCC,QAAAA,KAAK,EAAEb,OAAO,CAACa,KAFoB;AAGnCC,QAAAA,OAAO,EAAEd,OAAO,CAACc,OAHkB;AAInCC,QAAAA,EAAE,EAAEf,OAAO,CAACgB,GAAR,CAAYC,QAAZ;AAJ+B,OAAd,CAAd;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,CAzBM;AA2BP,eAAepB,MAAf","sourcesContent":["// .com/ HOme Page\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport head from \"next/head\";\n\nconst Meetup = (props) => {\n  return (\n    <Fragment>\n      <head>\n        <title></title>\n      </head>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n};\n\n// export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from api\n//   return {\n//     props: {\n//       meetups: meetUpData,\n//     },\n//   };\n// };\n\nexport const getStaticProps = async () => {\n  // fetch some data\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n\n  const allMeetup = await meetupsCollection.find().toArray();\n\n  //close the databse connection onece done\n  client.close();\n\n  return {\n    props: {\n      meetups: allMeetup.map((meetups) => ({\n        image: meetups.image,\n        title: meetups.title,\n        address: meetups.address,\n        id: meetups._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n};\n\nexport default Meetup;\n"]},"metadata":{},"sourceType":"module"}