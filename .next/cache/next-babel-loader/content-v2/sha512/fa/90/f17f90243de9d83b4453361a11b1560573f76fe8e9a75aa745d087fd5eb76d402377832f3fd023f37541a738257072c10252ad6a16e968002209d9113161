{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nabintamang/Udemy-Cources/React-Cource-2021/Next-Js-Course/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDatail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst Details = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://images.unsplash.com/photo-1628761425931-81d1fd92ffde?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzNnx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n      title: \"Best Place to Meet\",\n      address: \"347 Jone st NY\",\n      description: \"Nice place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n  const allMeetup = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: allMeetup.map(meetups => ({\n      params: {\n        meetupId: meetups._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: ObjectId(meetupId) //converted string meetupID to object ID using ObjectId()\n\n  });\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address\n      }\n    }\n  };\n};\nexport default Details;","map":{"version":3,"sources":["/Users/nabintamang/Udemy-Cources/React-Cource-2021/Next-Js-Course/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Details","getStaticPaths","client","connect","db","meetupsCollection","collection","allMeetup","find","_id","toArray","close","fallback","paths","map","meetups","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","props","meetupData","id","title","address"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAC,uKADR;AAEE,MAAA,KAAK,EAAC,oBAFR;AAGE,MAAA,OAAO,EAAC,gBAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAXD;;AAaA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAA1B;AAEA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAxB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,SAAS,CAACO,GAAV,CAAeC,OAAD,KAAc;AACjCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,OAAO,CAACN,GAAR,CAAYS,QAAZ;AAAZ;AADyB,KAAd,CAAd;AAFF,GAAP;AAMD,CAlBM;AAoBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAA1B;AAEA,QAAMe,cAAc,GAAGhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAC/Cb,IAAAA,GAAG,EAAEV,QAAQ,CAACkB,QAAD,CADkC,CACtB;;AADsB,GAA1B,CAAvB;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEN,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVU,QAAAA,KAAK,EAAEP,cAAc,CAACO,KAFZ;AAGVC,QAAAA;AAHU;AADP;AADF,GAAP;AASD,CAzBM;AA2BP,eAAe7B,OAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDatail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nconst Details = () => {\n  return (\n    <>\n      <MeetupDetail\n        image=\"https://images.unsplash.com/photo-1628761425931-81d1fd92ffde?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzNnx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\"\n        title=\"Best Place to Meet\"\n        address=\"347 Jone st NY\"\n        description=\"Nice place\"\n      />\n    </>\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n\n  const allMeetup = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: allMeetup.map((meetups) => ({\n      params: { meetupId: meetups._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: ObjectId(meetupId), //converted string meetupID to object ID using ObjectId()\n  });\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address\n      },\n    },\n  };\n};\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}