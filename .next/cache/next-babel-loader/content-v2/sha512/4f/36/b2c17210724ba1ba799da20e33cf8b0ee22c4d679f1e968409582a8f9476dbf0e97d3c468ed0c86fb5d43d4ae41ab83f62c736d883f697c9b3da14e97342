{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupDetail from \"../../components/meetups/MeetupDatail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nconst Details = props => {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    })]\n  });\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n  const allMeetup = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: allMeetup.map(meetups => ({\n      params: {\n        meetupId: meetups._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Saman:nepal123@cluster0.o3wjp.mongodb.net/meetupDataBase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupDataBase\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId) //converted string meetupID to object ID using ObjectId()\n\n  });\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        //converted _id filed back to into String using toString()\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default Details;","map":null,"metadata":{},"sourceType":"module"}